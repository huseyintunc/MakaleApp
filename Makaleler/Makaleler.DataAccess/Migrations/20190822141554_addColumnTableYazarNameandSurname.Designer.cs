// <auto-generated />
using System;
using Makaleler.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Makaleler.DataAccess.Migrations
{
    [DbContext(typeof(MakalelerContext))]
    [Migration("20190822141554_addColumnTableYazarNameandSurname")]
    partial class addColumnTableYazarNameandSurname
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview.19074.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Makaleler.Entities.Concrete.Kategori", b =>
                {
                    b.Property<int>("KategoriId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("KategoriId");

                    b.ToTable("Kategori");
                });

            modelBuilder.Entity("Makaleler.Entities.Concrete.Makale", b =>
                {
                    b.Property<int>("MakaleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aktif");

                    b.Property<DateTime>("EklenmeTarihi");

                    b.Property<int>("Goruntulenme");

                    b.Property<DateTime?>("GuncellenmeTarihi");

                    b.Property<string>("Icerik")
                        .IsRequired();

                    b.Property<int>("Kategori");

                    b.Property<int>("KategoriId");

                    b.Property<string>("KisaIcerik")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("MakaleBaslik")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<int>("YazarId");

                    b.HasKey("MakaleId");

                    b.HasIndex("KategoriId");

                    b.HasIndex("YazarId");

                    b.ToTable("Makale");
                });

            modelBuilder.Entity("Makaleler.Entities.Concrete.Yazar", b =>
                {
                    b.Property<int>("YazarId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("YazarId");

                    b.ToTable("Yazar");
                });

            modelBuilder.Entity("Makaleler.Entities.Concrete.Makale", b =>
                {
                    b.HasOne("Makaleler.Entities.Concrete.Kategori")
                        .WithMany("Makaleler")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Makaleler.Entities.Concrete.Yazar", "Yazar")
                        .WithMany()
                        .HasForeignKey("YazarId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
